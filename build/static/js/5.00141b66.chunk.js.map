{"version":3,"sources":["Components/Card/Card.js","Images/calc-05.jpg","Pages/AtkvsDmg/AtkvsDmg.js"],"names":["Card","bg","content","buttonName","footer","className","style","backgroundImage","getOptions","numberWithCommas","x","toString","replace","atkBase","parseFloat","document","getElementById","value","atkBono","Threshold","ThresholdMax","Math","round","innerHTML","AtkvsDmg","useEffect","window","scroll","id","background","Fragment","type","name","defaultValue","onClick"],"mappings":"kIAAA,iBAwBeA,IAtBf,YAAoD,IAApCC,EAAmC,EAAnCA,GAAgBC,GAAmB,EAA/BC,WAA+B,EAAnBD,SAASE,EAAU,EAAVA,OAErC,OACI,sBAAKC,UAAU,OAAf,UACI,wBAAQA,UAAU,cAAcC,MAAO,CAAEC,gBAAgB,OAAD,OAASN,EAAT,QAExD,qBAAKI,UAAU,YAAf,SAEKH,IAIL,wBAAQG,UAAU,yBAAlB,SACI,qBAAKA,UAAU,YAAf,SACKD,W,gCChBN,QAA0B,qC,gCCAzC,kDA2EA,SAASI,IAEL,SAASC,EAAiBC,GACtB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,KAGzD,IAAIC,EAAUC,WAAWC,SAASC,eAAe,WAAWC,OACxDC,EAAUJ,WAAWC,SAASC,eAAe,WAAWC,OAG5DC,GAFeJ,WAAWC,SAASC,eAAe,YAAYC,OAI9D,IAGIE,GAAa,QAAU,EAHhBL,WAAWC,SAASC,eAAe,QAAQC,OAGhB,KAAO,GAAKJ,EAC9CO,EAAgB,QAAWP,EAE/BM,EAAYE,KAAKC,MAAkB,IAAZH,GAAmB,IAC1CC,EAAeC,KAAKC,MAAqB,IAAfF,GAAsB,IAGhDL,SAASC,eAAe,aAAaO,UAAY,iBAAgBd,EAAiBU,GAAa,oCAC/FJ,SAASC,eAAe,YAAYO,UAAY,iBAAgBd,EAAiBW,GAAgB,+BAG7FL,SAASC,eAAe,cAAcO,UADtCL,EAAUC,EACwC,6CAEA,2CAM3CK,UAxGf,WAMI,OAJAC,qBAAU,WACNC,OAAOC,OAAO,EAAG,KAClB,IAGC,yBAASC,GAAG,UAAUvB,UAAU,SAAhC,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,iCAAf,SAEI,cAAC,IAAD,CAAMJ,GAAI4B,IACN3B,QAWhB,eAAC,IAAM4B,SAAP,WACI,2CAEA,sBAAKzB,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SAAqB,mDACrB,qBAAKA,UAAU,MAAf,SAAqB,uBAAO0B,KAAK,SAASC,KAAK,MAAMJ,GAAG,UAAUK,aAAa,WAGnF,sBAAK5B,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SAAqB,qDACrB,qBAAKA,UAAU,MAAf,SAAqB,uBAAO0B,KAAK,SAASC,KAAK,MAAMJ,GAAG,UAAUK,aAAa,WAGnF,sBAAK5B,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SAAqB,sDACrB,qBAAKA,UAAU,MAAf,SAAqB,uBAAO0B,KAAK,SAASC,KAAK,MAAMJ,GAAG,WAAWK,aAAa,WAGpF,sBAAK5B,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SAAqB,6CACrB,qBAAKA,UAAU,MAAf,SAAqB,uBAAO0B,KAAK,SAASC,KAAK,OAAOJ,GAAG,OAAOK,aAAa,WAGjF,iCACI,wBAAQ5B,UAAU,MAAM0B,KAAK,SAASG,QAAS1B,EAA/C,yCAlCQJ,OA4ChB,eAAC,IAAM0B,SAAP,WACI,sDACA,mBAAGF,GAAG,aAAN,2BACA,mBAAGA,GAAG,YAAN,uBACA,mBAAGA,GAAG,WAAN,kDACA,gCACI,6FAAsD,uBAAtD","file":"static/js/5.00141b66.chunk.js","sourcesContent":["import './Card.css'\r\n\r\nfunction Card({ bg, buttonName, content, footer }) {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <header className=\"card-header\" style={{ backgroundImage: `url(${bg})` }}>\r\n            </header>\r\n            <div className=\"container\">\r\n\r\n                {content}\r\n\r\n            </div >\r\n\r\n            <footer className=\"w3-container w3-purple\">\r\n                <div className=\"container\">\r\n                    {footer}\r\n                </div>\r\n            </footer>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Card;","export default __webpack_public_path__ + \"static/media/calc-05.c7f8b9a3.jpg\";","import React, { useEffect } from \"react\";\r\nimport Card from \"../../Components/Card/Card\";\r\nimport background from '../../Images/calc-05.jpg'\r\n\r\n\r\nfunction AtkvsDmg() {\r\n\r\n    useEffect(() => {\r\n        window.scroll(0, 0,);\r\n    }, []);\r\n\r\n    return (\r\n        <section id=\"section\" className=\"d-flex\">\r\n            <div className=\"container\">\r\n                <div className=\"content justify-content-center\">\r\n\r\n                    <Card bg={background}\r\n                        content={content()}\r\n                        footer={footer()}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section >\r\n    )\r\n}\r\n\r\nfunction content() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Atributos</h1>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\"><label>C.Atk Blanco</label></div>\r\n                <div className=\"col\"><input type=\"number\" name=\"atk\" id=\"atkBase\" defaultValue=\"0\" /></div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\"><label>C.Atk Amarillo</label></div>\r\n                <div className=\"col\"><input type=\"number\" name=\"atk\" id=\"atkBono\" defaultValue=\"0\" /></div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\"><label>C.Atk Verde/PvE</label></div>\r\n                <div className=\"col\"><input type=\"number\" name=\"atk\" id=\"atkVerde\" defaultValue=\"0\" /></div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\"><label>C. Dmg</label></div>\r\n                <div className=\"col\"><input type=\"number\" name=\"mult\" id=\"mult\" defaultValue=\"0\" /></div>\r\n            </div>\r\n\r\n            <center>\r\n                <button className=\"btn\" type=\"button\" onClick={getOptions}>\r\n                    Calcular Proporción\r\n                </button>\r\n            </center>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction footer() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Qué conviene usar</h1>\r\n            <p id=\"danioFinal\">Es mejor usar</p>\r\n            <p id=\"danioBase\">Límite</p>\r\n            <p id=\"danioMax\">Máximo de Bono de ataque a buscar</p>\r\n            <small>\r\n                <p>* El Máximo es considerando un Daño Cósmico de 30% <br />\r\n                    ** Solo usar el ataque verde para unidades exclusivas de PvE</p>\r\n            </small>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction getOptions() {\r\n\r\n    function numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    var atkBase = parseFloat(document.getElementById(\"atkBase\").value);\r\n    var atkBono = parseFloat(document.getElementById(\"atkBono\").value);\r\n    var atkVerde = parseFloat(document.getElementById(\"atkVerde\").value);\r\n\r\n    atkBono = atkBono + atkVerde;\r\n\r\n    var mult = parseFloat(document.getElementById(\"mult\").value);\r\n\r\n\r\n    var Threshold = (2.5462 * (1 + mult / 100) - 1) * atkBase;\r\n    var ThresholdMax = (2.31006) * atkBase;\r\n\r\n    Threshold = Math.round(Threshold * 100) / 100;\r\n    ThresholdMax = Math.round(ThresholdMax * 100) / 100;\r\n\r\n\r\n    document.getElementById(\"danioBase\").innerHTML = \"Límite: <b>\" + numberWithCommas(Threshold) + \"</b> de Ataque Cósmico de Bono\";\r\n    document.getElementById(\"danioMax\").innerHTML = \"Máximo: <b>\" + numberWithCommas(ThresholdMax) + \"</b> Bono de ataque a buscar\";\r\n\r\n    if (atkBono > Threshold) {\r\n        document.getElementById(\"danioFinal\").innerHTML = \"Es mejor buscar <b>Daño Cósmico</b> \";\r\n    } else {\r\n        document.getElementById(\"danioFinal\").innerHTML = \"Es mejor buscar <b>Ataque Cósmico</b>\";\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default AtkvsDmg;"],"sourceRoot":""}